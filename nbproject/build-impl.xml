<?xml version="1.0" encoding="UTF-8"?>

<!-- *** GENERATED FROM project.xml - DO NOT EDIT *** *** EDIT ../build.xml INSTEAD *** For the purpose of easier reading the script is divided into following sections: - initialization - compilation - dist - execution - debugging - javadoc - test compilation - test execution - test debugging - cleanup -->

-<project name="Taller-impl" default="default" basedir=".." xmlns:webproject3="http://www.netbeans.org/ns/web-project/3" xmlns:webproject2="http://www.netbeans.org/ns/web-project/2" xmlns:webproject1="http://www.netbeans.org/ns/web-project/1">

<import file="ant-deploy.xml"/>


-<fail message="Please build using Ant 1.7.1 or higher.">


-<condition>


-<not>

<antversion atleast="1.7.1"/>

</not>

</condition>

</fail>

<target name="default" description="Build whole project." depends="dist,javadoc"/>

<!-- INITIALIZATION SECTION -->



-<target name="-pre-init">

<!-- Empty placeholder for easier customization. -->


<!-- You can override this target in the ../build.xml file. -->


</target>


-<target name="-init-private" depends="-pre-init">

<property file="nbproject/private/private.properties"/>

</target>


-<target name="-init-user" depends="-pre-init,-init-private">

<property file="${user.properties.file}"/>

<!-- The two properties below are usually overridden -->


<!-- by the active platform. Just a fallback. -->


<property name="default.javac.source" value="1.4"/>

<property name="default.javac.target" value="1.4"/>

</target>


-<target name="-init-project" depends="-pre-init,-init-private,-init-user">

<property file="nbproject/project.properties"/>

</target>

<target name="-do-ear-init" depends="-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property" if="dist.ear.dir"/>


-<target name="-do-init" depends="-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property">


-<condition property="have.tests">


-<or>

<available file="${test.src.dir}"/>

</or>

</condition>


-<condition property="have.sources">


-<or>

<available file="${src.dir}"/>

</or>

</condition>


-<condition property="netbeans.home+have.tests">


-<and>

<isset property="netbeans.home"/>

<isset property="have.tests"/>

</and>

</condition>


-<condition property="no.javadoc.preview">

<isfalse value="${javadoc.preview}"/>

</condition>

<property name="javac.compilerargs" value=""/>


-<condition property="no.deps">


-<and>

<istrue value="${no.dependencies}"/>

</and>

</condition>


-<condition property="no.dist.ear.dir">


-<not>

<isset property="dist.ear.dir"/>

</not>

</condition>

<property name="build.web.excludes" value="${build.classes.excludes}"/>


-<condition property="do.compile.jsps">

<istrue value="${compile.jsps}"/>

</condition>


-<condition property="do.debug.server">


-<or>


-<not>

<isset property="debug.server"/>

</not>

<istrue value="${debug.server}"/>


-<and>


-<not>

<istrue value="${debug.server}"/>

</not>


-<not>

<istrue value="${debug.client}"/>

</not>

</and>

</or>

</condition>


-<condition property="do.debug.client">

<istrue value="${debug.client}"/>

</condition>


-<condition property="do.display.browser">

<istrue value="${display.browser}"/>

</condition>


-<condition property="do.display.browser.debug.old">


-<and>

<isset property="do.display.browser"/>


-<not>

<isset property="do.debug.client"/>

</not>


-<not>

<isset property="browser.context"/>

</not>

</and>

</condition>


-<condition property="do.display.browser.debug">


-<and>

<isset property="do.display.browser"/>


-<not>

<isset property="do.debug.client"/>

</not>

<isset property="browser.context"/>

</and>

</condition>

<available file="${conf.dir}/MANIFEST.MF" property="has.custom.manifest"/>

<available file="${persistence.xml.dir}/persistence.xml" property="has.persistence.xml"/>


-<condition property="do.war.package.with.custom.manifest">

<isset property="has.custom.manifest"/>

</condition>


-<condition property="do.war.package.without.custom.manifest">


-<not>

<isset property="has.custom.manifest"/>

</not>

</condition>


-<condition property="do.tmp.war.package.with.custom.manifest">


-<and>

<isset property="has.custom.manifest"/>


-<or>

<isfalse value="${directory.deployment.supported}"/>

<isset property="dist.ear.dir"/>

</or>

</and>

</condition>


-<condition property="do.tmp.war.package.without.custom.manifest">


-<and>


-<not>

<isset property="has.custom.manifest"/>

</not>


-<or>

<isfalse value="${directory.deployment.supported}"/>

<isset property="dist.ear.dir"/>

</or>

</and>

</condition>


-<condition property="do.tmp.war.package">


-<or>

<isfalse value="${directory.deployment.supported}"/>

<isset property="dist.ear.dir"/>

</or>

</condition>

<property name="build.meta.inf.dir" value="${build.web.dir}/META-INF"/>


-<condition value="${application.args}" property="application.args.param" else="">


-<and>

<isset property="application.args"/>


-<not>

<equals trim="true" arg2="" arg1="${application.args}"/>

</not>

</and>

</condition>

<property name="source.encoding" value="${file.encoding}"/>


-<condition value="${javadoc.encoding}" property="javadoc.encoding.used">


-<and>

<isset property="javadoc.encoding"/>


-<not>

<equals arg2="" arg1="${javadoc.encoding}"/>

</not>

</and>

</condition>

<property name="javadoc.encoding.used" value="${source.encoding}"/>

<property name="includes" value="**"/>

<property name="excludes" value=""/>

<property name="runmain.jvmargs" value=""/>

<path path="${endorsed.classpath}" id="endorsed.classpath.path"/>


-<condition value="-Xbootclasspath/p:'${toString:endorsed.classpath.path}'" property="endorsed.classpath.cmd.line.arg" else="">


-<and>

<isset property="endorsed.classpath"/>

<length when="greater" string="${endorsed.classpath}" length="0"/>

</and>

</condition>


-<condition property="jdkBug6558476" else="false">


-<and>

<matches string="${java.specification.version}" pattern="1\.[56]"/>


-<not>

<os family="unix"/>

</not>

</and>

</condition>

<property name="javac.fork" value="${jdkBug6558476}"/>


-<condition property="junit.available">


-<or>

<available classpath="${run.test.classpath}" classname="org.junit.Test"/>

<available classpath="${run.test.classpath}" classname="junit.framework.Test"/>

</or>

</condition>


-<condition property="testng.available">

<available classpath="${run.test.classpath}" classname="org.testng.annotations.Test"/>

</condition>


-<condition property="junit+testng.available">


-<and>

<istrue value="${junit.available}"/>

<istrue value="${testng.available}"/>

</and>

</condition>


-<condition value="mixed" property="testng.mode" else="testng">

<istrue value="${junit+testng.available}"/>

</condition>


-<condition value="-mixed" property="testng.debug.mode" else="">

<istrue value="${junit+testng.available}"/>

</condition>

</target>


-<target name="-init-cos" depends="init" unless="deploy.on.save">


-<condition value="true" property="deploy.on.save">


-<or>

<istrue value="${j2ee.deploy.on.save}"/>

<istrue value="${j2ee.compile.on.save}"/>

</or>

</condition>

</target>


-<target name="-post-init">

<!-- Empty placeholder for easier customization. -->


<!-- You can override this target in the ../build.xml file. -->


</target>


-<target name="-init-check" depends="-pre-init,-init-private,-init-user,-init-project,-do-init">

<fail unless="src.dir">Must set src.dir</fail>

<fail unless="test.src.dir">Must set test.src.dir</fail>

<fail unless="build.dir">Must set build.dir</fail>

<fail unless="build.web.dir">Must set build.web.dir</fail>

<fail unless="build.generated.dir">Must set build.generated.dir</fail>

<fail unless="dist.dir">Must set dist.dir</fail>

<fail unless="build.classes.dir">Must set build.classes.dir</fail>

<fail unless="dist.javadoc.dir">Must set dist.javadoc.dir</fail>

<fail unless="build.test.classes.dir">Must set build.test.classes.dir</fail>

<fail unless="build.test.results.dir">Must set build.test.results.dir</fail>

<fail unless="build.classes.excludes">Must set build.classes.excludes</fail>

<fail unless="dist.war">Must set dist.war</fail>


-<condition property="missing.j2ee.server.home">


-<and>

<matches string="${j2ee.platform.classpath}" pattern="j2ee.server.home"/>


-<not>

<isset property="j2ee.server.home"/>

</not>

</and>

</condition>

<fail if="missing.j2ee.server.home"> The Java EE server classpath is not correctly set up - server home directory is missing. Either open the project in the IDE and assign the server or setup the server classpath manually. For example like this: ant -Dj2ee.server.home=<app_server_installation_directory> </fail>

<fail unless="j2ee.platform.classpath"> The Java EE server classpath is not correctly set up. Your active server type is ${j2ee.server.type}. Either open the project in the IDE and assign the server or setup the server classpath manually. For example like this: ant -Duser.properties.file=<path_to_property_file> (where you put the property "j2ee.platform.classpath" in a .properties file) or ant -Dj2ee.platform.classpath=<server_classpath> (where no properties file is used) </fail>

</target>


-<target name="-init-macrodef-property">


-<macrodef name="property" uri="http://www.netbeans.org/ns/web-project/1">

<attribute name="name"/>

<attribute name="value"/>


-<sequential>

<property name="@{name}" value="${@{value}}"/>

</sequential>

</macrodef>

</target>


-<target name="-init-macrodef-javac-with-processors" depends="-init-ap-cmdline-properties" if="ap.supported.internal">


-<macrodef name="javac" uri="http://www.netbeans.org/ns/web-project/2">

<attribute name="srcdir" default="${src.dir}"/>

<attribute name="destdir" default="${build.classes.dir}"/>

<attribute name="classpath" default="${javac.classpath}:${j2ee.platform.classpath}"/>

<attribute name="processorpath" default="${javac.processorpath}"/>

<attribute name="apgeneratedsrcdir" default="${build.generated.sources.dir}/ap-source-output"/>

<attribute name="includes" default="${includes}"/>

<attribute name="excludes" default="${excludes}"/>

<attribute name="debug" default="${javac.debug}"/>

<attribute name="gensrcdir" default="${empty.dir}"/>

<element name="customize" optional="true"/>


-<sequential>

<property name="empty.dir" location="${build.dir}/empty"/>

<mkdir dir="${empty.dir}"/>

<mkdir dir="@{apgeneratedsrcdir}"/>


-<javac target="${javac.target}" srcdir="@{srcdir}" source="${javac.source}" includes="@{includes}" includeantruntime="false" fork="${javac.fork}" excludes="@{excludes}" encoding="${source.encoding}" destdir="@{destdir}" deprecation="${javac.deprecation}" debug="@{debug}">


-<src>


-<dirset dir="@{gensrcdir}" erroronmissingdir="false">

<include name="*"/>

</dirset>

</src>


-<classpath>

<path path="@{classpath}"/>

</classpath>

<compilerarg line="${endorsed.classpath.cmd.line.arg}"/>

<compilerarg line="${javac.compilerargs}"/>

<compilerarg value="-processorpath"/>

<compilerarg path="@{processorpath}:${empty.dir}"/>

<compilerarg line="${ap.processors.internal}"/>

<compilerarg value="-s"/>

<compilerarg path="@{apgeneratedsrcdir}"/>

<compilerarg line="${ap.proc.none.internal}"/>

<customize/>

</javac>

</sequential>

</macrodef>

</target>


-<target name="-init-macrodef-javac-without-processors" depends="-init-ap-cmdline-properties" unless="ap.supported.internal">


-<macrodef name="javac" uri="http://www.netbeans.org/ns/web-project/2">

<attribute name="srcdir" default="${src.dir}"/>

<attribute name="destdir" default="${build.classes.dir}"/>

<attribute name="classpath" default="${javac.classpath}:${j2ee.platform.classpath}"/>

<attribute name="processorpath" default="${javac.processorpath}"/>

<attribute name="apgeneratedsrcdir" default="${build.generated.sources.dir}/ap-source-output"/>

<attribute name="includes" default="${includes}"/>

<attribute name="excludes" default="${excludes}"/>

<attribute name="debug" default="${javac.debug}"/>

<attribute name="gensrcdir" default="${empty.dir}"/>

<element name="customize" optional="true"/>


-<sequential>

<property name="empty.dir" location="${build.dir}/empty"/>

<mkdir dir="${empty.dir}"/>


-<javac target="${javac.target}" srcdir="@{srcdir}" source="${javac.source}" includes="@{includes}" includeantruntime="false" excludes="@{excludes}" encoding="${source.encoding}" destdir="@{destdir}" deprecation="${javac.deprecation}" debug="@{debug}">


-<src>


-<dirset dir="@{gensrcdir}" erroronmissingdir="false">

<include name="*"/>

</dirset>

</src>


-<classpath>

<path path="@{classpath}"/>

</classpath>

<compilerarg line="${endorsed.classpath.cmd.line.arg}"/>

<compilerarg line="${javac.compilerargs}"/>

<customize/>

</javac>

</sequential>

</macrodef>

</target>


-<target name="-init-macrodef-javac" depends="-init-macrodef-javac-with-processors,-init-macrodef-javac-without-processors">


-<macrodef name="depend" uri="http://www.netbeans.org/ns/web-project/2">

<attribute name="srcdir" default="${src.dir}"/>

<attribute name="destdir" default="${build.classes.dir}"/>

<attribute name="classpath" default="${javac.classpath}:${j2ee.platform.classpath}"/>


-<sequential>


-<depend srcdir="@{srcdir}" includes="${includes}" excludes="${excludes}" destdir="@{destdir}" cache="${build.dir}/depcache">


-<classpath>

<path path="@{classpath}"/>

</classpath>

</depend>

</sequential>

</macrodef>


-<macrodef name="force-recompile" uri="http://www.netbeans.org/ns/web-project/2">

<attribute name="destdir" default="${build.classes.dir}"/>


-<sequential>

<fail unless="javac.includes">Must set javac.includes</fail>


-<pathconvert property="javac.includes.binary" pathsep="${line.separator}">


-<path>

<filelist dir="@{destdir}" files="${javac.includes}"/>

</path>

<globmapper to="*.class" from="*.java"/>

</pathconvert>

<tempfile property="javac.includesfile.binary" deleteonexit="true"/>

<echo file="${javac.includesfile.binary}" message="${javac.includes.binary}"/>


-<delete>

<files includesfile="${javac.includesfile.binary}"/>

</delete>

<delete file="${javac.includesfile.binary}"/>

</sequential>

</macrodef>

</target>


-<target name="-init-macrodef-junit-init" if="${junit.available}">


-<condition value="true" property="nb.junit.batch" else="false">


-<and>

<istrue value="${junit.available}"/>


-<not>

<isset property="test.method"/>

</not>

</and>

</condition>


-<condition value="true" property="nb.junit.single" else="false">


-<and>

<istrue value="${junit.available}"/>

<isset property="test.method"/>

</and>

</condition>

</target>


-<target name="-init-test-properties">

<property name="test.binaryincludes" value="<nothing>"/>

<property name="test.binarytestincludes" value=""/>

<property name="test.binaryexcludes" value=""/>

</target>


-<target name="-init-macrodef-junit-single" if="${nb.junit.single}" unless="${nb.junit.batch}">


-<macrodef name="junit" uri="http://www.netbeans.org/ns/web-project/2">

<attribute name="includes" default="${includes}"/>

<attribute name="excludes" default="${excludes}"/>

<attribute name="testincludes" default="**"/>

<attribute name="testmethods" default=""/>

<element name="customize" optional="true"/>


-<sequential>


-<junit dir="${basedir}" fork="true" tempdir="${java.io.tmpdir}" showoutput="true" failureproperty="tests.failed" errorproperty="tests.failed">

<test name="@{testincludes}" todir="${build.test.results.dir}" methods="@{testmethods}"/>


-<syspropertyset>

<propertyref prefix="test-sys-prop."/>

<mapper to="*" from="test-sys-prop.*" type="glob"/>

</syspropertyset>

<formatter type="brief" usefile="false"/>

<formatter type="xml"/>

<jvmarg value="-ea"/>

<customize/>

</junit>

</sequential>

</macrodef>

</target>


-<target name="-init-macrodef-junit-batch" depends="-init-test-properties" if="${nb.junit.batch}" unless="${nb.junit.single}">


-<macrodef name="junit" uri="http://www.netbeans.org/ns/web-project/2">

<attribute name="includes" default="${includes}"/>

<attribute name="excludes" default="${excludes}"/>

<attribute name="testincludes" default="**"/>

<attribute name="testmethods" default=""/>

<element name="customize" optional="true"/>


-<sequential>

<property name="run.jvmargs.ide" value=""/>


-<junit dir="${basedir}" fork="true" tempdir="${build.dir}" showoutput="true" failureproperty="tests.failed" errorproperty="tests.failed">


-<batchtest todir="${build.test.results.dir}">


-<fileset dir="${test.src.dir}" includes="@{includes}" excludes="@{excludes},${excludes}">

<filename name="@{testincludes}"/>

</fileset>


-<fileset dir="${build.test.classes.dir}" includes="${test.binaryincludes}" excludes="@{excludes},${excludes},${test.binaryexcludes}">

<filename name="${test.binarytestincludes}"/>

</fileset>

</batchtest>


-<syspropertyset>

<propertyref prefix="test-sys-prop."/>

<mapper to="*" from="test-sys-prop.*" type="glob"/>

</syspropertyset>

<formatter type="brief" usefile="false"/>

<formatter type="xml"/>

<jvmarg value="-ea"/>

<jvmarg line="${run.jvmargs.ide}"/>

<customize/>

</junit>

</sequential>

</macrodef>

</target>

<target name="-init-macrodef-junit" depends="-init-macrodef-junit-init,-init-macrodef-junit-single, -init-macrodef-junit-batch" if="${junit.available}"/>


-<target name="-init-macrodef-testng" if="${testng.available}">


-<macrodef name="testng" uri="http://www.netbeans.org/ns/web-project/2">

<attribute name="includes" default="${includes}"/>

<attribute name="excludes" default="${excludes}"/>

<attribute name="testincludes" default="**"/>

<attribute name="testmethods" default=""/>

<element name="customize" optional="true"/>


-<sequential>


-<condition value="@{testincludes}.@{testmethods}" property="testng.methods.arg" else="">

<isset property="test.method"/>

</condition>


-<union id="test.set">


-<fileset dir="${test.src.dir}" includes="@{includes}" excludes="@{excludes},**/*.xml,${excludes}">

<filename name="@{testincludes}"/>

</fileset>

</union>

<taskdef name="testng" classpath="${run.test.classpath}" classname="org.testng.TestNGAntTask"/>


-<testng methods="${testng.methods.arg}" workingDir="${basedir}" testname="TestNG tests" suitename="Taller" outputdir="${build.test.results.dir}" mode="${testng.mode}" listeners="org.testng.reporters.VerboseReporter" failureProperty="tests.failed" classfilesetref="test.set">

<xmlfileset dir="${build.test.classes.dir}" includes="@{testincludes}"/>


-<propertyset>

<propertyref prefix="test-sys-prop."/>

<mapper to="*" from="test-sys-prop.*" type="glob"/>

</propertyset>

<customize/>

</testng>

</sequential>

</macrodef>

</target>


-<target name="-init-macrodef-test-impl">


-<macrodef name="test-impl" uri="http://www.netbeans.org/ns/web-project/2">

<attribute name="includes" default="${includes}"/>

<attribute name="excludes" default="${excludes}"/>

<attribute name="testincludes" default="**"/>

<attribute name="testmethods" default=""/>

<element name="customize" optional="true" implicit="true"/>


-<sequential>

<echo>No tests executed.</echo>

</sequential>

</macrodef>

</target>


-<target name="-init-macrodef-junit-impl" depends="-init-macrodef-junit" if="${junit.available}">


-<macrodef name="test-impl" uri="http://www.netbeans.org/ns/web-project/2">

<attribute name="includes" default="${includes}"/>

<attribute name="excludes" default="${excludes}"/>

<attribute name="testincludes" default="**"/>

<attribute name="testmethods" default=""/>

<element name="customize" optional="true" implicit="true"/>


-<sequential>


-<webproject2:junit includes="@{includes}" excludes="@{excludes}" testmethods="@{testmethods}" testincludes="@{testincludes}">

<customize/>

</webproject2:junit>

</sequential>

</macrodef>

</target>


-<target name="-init-macrodef-testng-impl" depends="-init-macrodef-testng" if="${testng.available}">


-<macrodef name="test-impl" uri="http://www.netbeans.org/ns/web-project/2">

<attribute name="includes" default="${includes}"/>

<attribute name="excludes" default="${excludes}"/>

<attribute name="testincludes" default="**"/>

<attribute name="testmethods" default=""/>

<element name="customize" optional="true" implicit="true"/>


-<sequential>


-<webproject2:testng includes="@{includes}" excludes="@{excludes}" testmethods="@{testmethods}" testincludes="@{testincludes}">

<customize/>

</webproject2:testng>

</sequential>

</macrodef>

</target>


-<target name="-init-macrodef-test" depends="-init-macrodef-test-impl,-init-macrodef-junit-impl,-init-macrodef-testng-impl">


-<macrodef name="test" uri="http://www.netbeans.org/ns/web-project/2">

<attribute name="includes" default="${includes}"/>

<attribute name="excludes" default="${excludes}"/>

<attribute name="testincludes" default="**"/>

<attribute name="testmethods" default=""/>


-<sequential>


-<webproject2:test-impl includes="@{includes}" excludes="@{excludes}" testmethods="@{testmethods}" testincludes="@{testincludes}">


-<customize>


-<classpath>

<path path="${run.test.classpath}:${j2ee.platform.classpath}:${j2ee.platform.embeddableejb.classpath}"/>

</classpath>

<jvmarg line="${endorsed.classpath.cmd.line.arg}"/>

<jvmarg line="${runmain.jvmargs}"/>

</customize>

</webproject2:test-impl>

</sequential>

</macrodef>

</target>


-<target name="-init-macrodef-junit-debug" if="${junit.available}" unless="${nb.junit.batch}">


-<macrodef name="junit-debug" uri="http://www.netbeans.org/ns/web-project/2">

<attribute name="includes" default="${includes}"/>

<attribute name="excludes" default="${excludes}"/>

<attribute name="testincludes" default="**"/>

<attribute name="testmethods" default=""/>

<element name="customize" optional="true"/>


-<sequential>


-<junit dir="${basedir}" fork="true" tempdir="${java.io.tmpdir}" showoutput="true" failureproperty="tests.failed" errorproperty="tests.failed">

<test name="@{testincludes}" todir="${build.test.results.dir}" methods="@{testmethods}"/>


-<syspropertyset>

<propertyref prefix="test-sys-prop."/>

<mapper to="*" from="test-sys-prop.*" type="glob"/>

</syspropertyset>

<formatter type="brief" usefile="false"/>

<formatter type="xml"/>

<jvmarg value="-ea"/>

<jvmarg line="${debug-args-line}"/>

<jvmarg value="-Xrunjdwp:transport=${debug-transport},address=${jpda.address}"/>

<customize/>

</junit>

</sequential>

</macrodef>

</target>


-<target name="-init-macrodef-junit-debug-batch" depends="-init-test-properties" if="${nb.junit.batch}">


-<macrodef name="junit-debug" uri="http://www.netbeans.org/ns/web-project/2">

<attribute name="includes" default="${includes}"/>

<attribute name="excludes" default="${excludes}"/>

<attribute name="testincludes" default="**"/>

<attribute name="testmethods" default=""/>

<element name="customize" optional="true"/>


-<sequential>

<property name="run.jvmargs.ide" value=""/>


-<junit dir="${basedir}" fork="true" tempdir="${build.dir}" showoutput="true" failureproperty="tests.failed" errorproperty="tests.failed">


-<batchtest todir="${build.test.results.dir}">


-<fileset dir="${test.src.dir}" includes="@{includes}" excludes="@{excludes},${excludes}">

<filename name="@{testincludes}"/>

</fileset>


-<fileset dir="${build.test.classes.dir}" includes="${test.binaryincludes}" excludes="@{excludes},${excludes},${test.binaryexcludes}">

<filename name="${test.binarytestincludes}"/>

</fileset>

</batchtest>


-<syspropertyset>

<propertyref prefix="test-sys-prop."/>

<mapper to="*" from="test-sys-prop.*" type="glob"/>

</syspropertyset>

<formatter type="brief" usefile="false"/>

<formatter type="xml"/>

<jvmarg value="-ea"/>

<jvmarg line="${run.jvmargs.ide}"/>

<jvmarg line="${debug-args-line}"/>

<jvmarg value="-Xrunjdwp:transport=${debug-transport},address=${jpda.address}"/>

<customize/>

</junit>

</sequential>

</macrodef>

</target>


-<target name="-init-macrodef-junit-debug-impl" depends="-init-macrodef-junit-debug,-init-macrodef-junit-debug-batch" if="${junit.available}">


-<macrodef name="test-debug-impl" uri="http://www.netbeans.org/ns/web-project/2">

<attribute name="includes" default="${includes}"/>

<attribute name="excludes" default="${excludes}"/>

<attribute name="testincludes" default="**"/>

<attribute name="testmethods" default=""/>

<element name="customize" optional="true" implicit="true"/>


-<sequential>


-<webproject2:junit-debug includes="@{includes}" excludes="@{excludes}" testmethods="@{testmethods}" testincludes="@{testincludes}">

<customize/>

</webproject2:junit-debug>

</sequential>

</macrodef>

</target>


-<target name="-init-macrodef-testng-debug" if="${testng.available}">


-<macrodef name="testng-debug" uri="http://www.netbeans.org/ns/web-project/2">

<attribute name="testClass" default="${main.class}"/>

<attribute name="testMethod" default=""/>

<element name="customize2" optional="true"/>


-<sequential>


-<condition value="-methods @{testClass}.@{testMethod}" property="test.class.or.method" else="-testclass @{testClass}">

<isset property="test.method"/>

</condition>


-<condition value="@{testClass}" property="testng.cmd.args" else="-suitename Taller -testname @{testClass} ${test.class.or.method}">

<matches string="@{testClass}" pattern=".*\.xml"/>

</condition>

<delete dir="${build.test.results.dir}" quiet="true"/>

<mkdir dir="${build.test.results.dir}"/>


-<webproject1:debug classpath="${debug.test.classpath}:${j2ee.platform.embeddableejb.classpath}" classname="org.testng.TestNG" args="${testng.cmd.args}">


-<customize>

<customize2/>

<jvmarg value="-ea"/>

<arg line="${testng.debug.mode}"/>

<arg line="-d ${build.test.results.dir}"/>

<arg line="-listener org.testng.reporters.VerboseReporter"/>

</customize>

</webproject1:debug>

</sequential>

</macrodef>

</target>


-<target name="-init-macrodef-testng-debug-impl" depends="-init-macrodef-testng-debug" if="${testng.available}">


-<macrodef name="testng-debug-impl" uri="http://www.netbeans.org/ns/web-project/2">

<attribute name="testClass" default="${main.class}"/>

<attribute name="testMethod" default=""/>

<element name="customize2" optional="true" implicit="true"/>


-<sequential>


-<webproject2:testng-debug testMethod="@{testMethod}" testClass="@{testClass}">

<customize2/>

</webproject2:testng-debug>

</sequential>

</macrodef>

</target>


-<target name="-init-macrodef-test-debug-junit" depends="-init-macrodef-junit-debug-impl" if="${junit.available}">


-<macrodef name="test-debug" uri="http://www.netbeans.org/ns/web-project/2">

<attribute name="includes" default="${includes}"/>

<attribute name="excludes" default="${excludes}"/>

<attribute name="testincludes" default="**"/>

<attribute name="testmethods" default=""/>

<attribute name="testClass" default="${main.class}"/>

<attribute name="testMethod" default=""/>


-<sequential>


-<webproject2:test-debug-impl includes="@{includes}" excludes="@{excludes}" testmethods="@{testmethods}" testincludes="@{testincludes}">


-<customize>


-<classpath>

<path path="${run.test.classpath}:${j2ee.platform.classpath}:${j2ee.platform.embeddableejb.classpath}"/>

</classpath>

<jvmarg line="${endorsed.classpath.cmd.line.arg}"/>

<jvmarg line="${runmain.jvmargs}"/>

</customize>

</webproject2:test-debug-impl>

</sequential>

</macrodef>

</target>


-<target name="-init-macrodef-test-debug-testng" depends="-init-macrodef-testng-debug-impl" if="${testng.available}">


-<macrodef name="test-debug" uri="http://www.netbeans.org/ns/web-project/2">

<attribute name="includes" default="${includes}"/>

<attribute name="excludes" default="${excludes}"/>

<attribute name="testincludes" default="**"/>

<attribute name="testmethods" default=""/>

<attribute name="testClass" default="${main.class}"/>

<attribute name="testMethod" default=""/>


-<sequential>


-<webproject2:testng-debug-impl testMethod="@{testMethod}" testClass="@{testClass}">


-<customize2>


-<syspropertyset>

<propertyref prefix="test-sys-prop."/>

<mapper to="*" from="test-sys-prop.*" type="glob"/>

</syspropertyset>

</customize2>

</webproject2:testng-debug-impl>

</sequential>

</macrodef>

</target>

<target name="-init-macrodef-test-debug" depends="-init-macrodef-test-debug-junit,-init-macrodef-test-debug-testng"/>


-<target name="-init-macrodef-java">


-<macrodef name="java" uri="http://www.netbeans.org/ns/web-project/1">

<attribute name="classname" default="${main.class}"/>

<attribute name="classpath" default="${debug.classpath}"/>

<element name="customize" optional="true"/>


-<sequential>


-<java classname="@{classname}" fork="true">

<jvmarg line="${endorsed.classpath.cmd.line.arg}"/>

<jvmarg line="${runmain.jvmargs}"/>


-<classpath>

<path path="@{classpath}:${j2ee.platform.classpath}"/>

</classpath>


-<syspropertyset>

<propertyref prefix="run-sys-prop."/>

<mapper to="*" from="run-sys-prop.*" type="glob"/>

</syspropertyset>

<customize/>

</java>

</sequential>

</macrodef>

</target>


-<target name="-init-macrodef-nbjsdebug">


-<macrodef name="nbjsdebugstart" uri="http://www.netbeans.org/ns/web-project/1">

<attribute name="webUrl" default="${client.url}"/>


-<sequential>

<nbjsdebugstart webUrl="@{webUrl}" urlPart="${client.urlPart}"/>

</sequential>

</macrodef>

</target>


-<target name="-init-macrodef-nbjpda" depends="-init-debug-args">


-<macrodef name="nbjpdastart" uri="http://www.netbeans.org/ns/web-project/1">

<attribute name="name" default="${main.class}"/>

<attribute name="classpath" default="${debug.classpath}:${j2ee.platform.classpath}"/>


-<sequential>


-<nbjpdastart name="@{name}" transport="${debug-transport}" addressproperty="jpda.address">


-<classpath>

<path path="@{classpath}"/>

</classpath>

</nbjpdastart>

</sequential>

</macrodef>


-<macrodef name="nbjpdareload" uri="http://www.netbeans.org/ns/web-project/1">

<attribute name="dir" default="${build.classes.dir}"/>


-<sequential>


-<nbjpdareload>


-<fileset dir="@{dir}" includes="${fix.classes}">

<include name="${fix.includes}*.class"/>

</fileset>

</nbjpdareload>

</sequential>

</macrodef>


-<macrodef name="nbjpdaappreloaded" uri="http://www.netbeans.org/ns/web-project/1">


-<sequential>

<nbjpdaappreloaded/>

</sequential>

</macrodef>

</target>


-<target name="-init-debug-args">

<property name="version-output" value="java version "${ant.java.version}"/>


-<condition property="have-jdk-older-than-1.4">


-<or>

<contains string="${version-output}" substring="java version "1.0"/>

<contains string="${version-output}" substring="java version "1.1"/>

<contains string="${version-output}" substring="java version "1.2"/>

<contains string="${version-output}" substring="java version "1.3"/>

</or>

</condition>


-<condition value="-Xdebug -Xnoagent -Djava.compiler=none" property="debug-args-line" else="-Xdebug">

<istrue value="${have-jdk-older-than-1.4}"/>

</condition>


-<condition value="dt_shmem" property="debug-transport-by-os" else="dt_socket">

<os family="windows"/>

</condition>


-<condition value="${debug.transport}" property="debug-transport" else="${debug-transport-by-os}">

<isset property="debug.transport"/>

</condition>

</target>


-<target name="-init-macrodef-debug" depends="-init-debug-args">


-<macrodef name="debug" uri="http://www.netbeans.org/ns/web-project/1">

<attribute name="classname" default="${main.class}"/>

<attribute name="classpath" default="${debug.classpath}:${j2ee.platform.classpath}"/>

<attribute name="args" default="${application.args.param}"/>

<element name="customize" optional="true"/>


-<sequential>


-<java classname="@{classname}" fork="true">

<jvmarg line="${endorsed.classpath.cmd.line.arg}"/>

<jvmarg line="${debug-args-line}"/>

<jvmarg value="-Xrunjdwp:transport=${debug-transport},address=${jpda.address}"/>

<jvmarg line="${runmain.jvmargs}"/>


-<classpath>

<path path="@{classpath}"/>

</classpath>


-<syspropertyset>

<propertyref prefix="run-sys-prop."/>

<mapper to="*" from="run-sys-prop.*" type="glob"/>

</syspropertyset>

<arg line="@{args}"/>

<customize/>

</java>

</sequential>

</macrodef>

</target>


-<target name="-init-taskdefs">

<fail unless="libs.CopyLibs.classpath"> The libs.CopyLibs.classpath property is not set up. This property must point to org-netbeans-modules-java-j2seproject-copylibstask.jar file which is part of NetBeans IDE installation and is usually located at <netbeans_installation>/java<version>/ant/extra folder. Either open the project in the IDE and make sure CopyLibs library exists or setup the property manually. For example like this: ant -Dlibs.CopyLibs.classpath=a/path/to/org-netbeans-modules-java-j2seproject-copylibstask.jar </fail>

<taskdef classpath="${libs.CopyLibs.classpath}" resource="org/netbeans/modules/java/j2seproject/copylibstask/antlib.xml"/>

</target>


-<target name="-init-ap-cmdline-properties">

<property name="annotation.processing.enabled" value="true"/>

<property name="annotation.processing.processors.list" value=""/>

<property name="annotation.processing.run.all.processors" value="true"/>

<property name="javac.processorpath" value="${javac.classpath}"/>

<property name="javac.test.processorpath" value="${javac.test.classpath}"/>


-<condition value="true" property="ap.supported.internal">


-<not>

<matches string="${javac.source}" pattern="1\.[0-5](\..*)?"/>

</not>

</condition>

</target>


-<target name="-init-ap-cmdline-supported" depends="-init-ap-cmdline-properties" if="ap.supported.internal">


-<condition value="-processor ${annotation.processing.processors.list}" property="ap.processors.internal" else="">

<isfalse value="${annotation.processing.run.all.processors}"/>

</condition>


-<condition value="-proc:none" property="ap.proc.none.internal" else="">

<isfalse value="${annotation.processing.enabled}"/>

</condition>

</target>


-<target name="-init-ap-cmdline" depends="-init-ap-cmdline-properties,-init-ap-cmdline-supported">

<property name="ap.cmd.line.internal" value=""/>

</target>

<!-- pre NB7.2 profiling section; consider it deprecated -->


<target name="profile-init" depends="-profile-pre-init, init, -profile-post-init, -profile-init-check" if="profiler.info.jvmargs.agent"/>


-<target name="-profile-pre-init" if="profiler.info.jvmargs.agent">

<!-- Empty placeholder for easier customization. -->


<!-- You can override this target in the ../build.xml file. -->


</target>


-<target name="-profile-post-init" if="profiler.info.jvmargs.agent">

<!-- Empty placeholder for easier customization. -->


<!-- You can override this target in the ../build.xml file. -->


</target>


-<target name="-profile-init-check" depends="-profile-pre-init, init, -profile-post-init" if="profiler.info.jvmargs.agent">

<fail unless="profiler.info.jvm">Must set JVM to use for profiling in profiler.info.jvm</fail>

<fail unless="profiler.info.jvmargs.agent">Must set profiler agent JVM arguments in profiler.info.jvmargs.agent</fail>

</target>

<!-- end of pre NB7.2 profiling section -->


<target name="init" depends="-pre-init,-init-private,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-test,-init-macrodef-test-debug,-init-macrodef-java,-init-macrodef-nbjpda,-init-macrodef-nbjsdebug,-init-macrodef-debug,-init-taskdefs,-init-ap-cmdline"/>

<!-- COMPILATION SECTION -->


<target name="deps-module-jar" depends="init" if="no.dist.ear.dir" unless="no.deps"/>

<target name="deps-ear-jar" depends="init" if="dist.ear.dir" unless="no.deps"/>

<target name="deps-jar" depends="init, deps-module-jar, deps-ear-jar" unless="no.deps"/>


-<target name="-pre-pre-compile" depends="init,deps-jar">

<mkdir dir="${build.classes.dir}"/>

</target>


-<target name="-pre-compile">

<!-- Empty placeholder for easier customization. -->


<!-- You can override this target in the ../build.xml file. -->


</target>


-<target name="-copy-webdir">


-<copy todir="${build.web.dir}">

<fileset dir="${web.docbase.dir}" includes="${includes}" excludes="${build.web.excludes},${excludes}"/>

</copy>


-<copy todir="${build.web.dir}/WEB-INF">

<fileset dir="${webinf.dir}" excludes="${build.web.excludes}"/>

</copy>

</target>


-<target name="-do-compile" depends="init, deps-jar, -pre-pre-compile, -pre-compile, -copy-manifest, -copy-persistence-xml, -copy-webdir, library-inclusion-in-archive,library-inclusion-in-manifest" if="have.sources">

<webproject2:javac destdir="${build.classes.dir}" gensrcdir="${build.generated.sources.dir}"/>


-<copy todir="${build.classes.dir}">

<fileset dir="${src.dir}" includes="${includes}" excludes="${build.classes.excludes},${excludes}"/>

</copy>

</target>


-<target name="-copy-manifest" if="has.custom.manifest">

<mkdir dir="${build.meta.inf.dir}"/>


-<copy todir="${build.meta.inf.dir}">

<fileset dir="${conf.dir}" includes="MANIFEST.MF"/>

</copy>

</target>


-<target name="-copy-persistence-xml" if="has.persistence.xml">

<mkdir dir="${build.web.dir}/WEB-INF/classes/META-INF"/>


-<copy todir="${build.web.dir}/WEB-INF/classes/META-INF">

<fileset dir="${persistence.xml.dir}" includes="persistence.xml orm.xml"/>

</copy>

</target>


-<target name="-post-compile">

<!-- Empty placeholder for easier customization. -->


<!-- You can override this target in the ../build.xml file. -->


</target>

<target name="compile" description="Compile project." depends="init,deps-jar,-pre-pre-compile,-pre-compile,-do-compile,-post-compile"/>


-<target name="-pre-compile-single">

<!-- Empty placeholder for easier customization. -->


<!-- You can override this target in the ../build.xml file. -->


</target>


-<target name="-do-compile-single" depends="init,deps-jar,-pre-pre-compile">

<fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>

<webproject2:javac includes="${javac.includes}" excludes="" gensrcdir="${build.generated.sources.dir}"/>


-<copy todir="${build.classes.dir}">

<fileset dir="${src.dir}" includes="${includes}" excludes="${build.classes.excludes},${excludes}"/>

</copy>

</target>


-<target name="-post-compile-single">

<!-- Empty placeholder for easier customization. -->


<!-- You can override this target in the ../build.xml file. -->


</target>

<target name="compile-single" depends="init,deps-jar,-pre-pre-compile,-pre-compile-single,-do-compile-single,-post-compile-single"/>

<property name="jspc.schemas" value="/resources/schemas/"/>

<property name="jspc.dtds" value="/resources/dtds/"/>


-<target name="compile-jsps" description="Test compile JSP pages to expose compilation errors." depends="compile" if="do.compile.jsps">

<mkdir dir="${build.generated.dir}/src"/>


-<java classname="org.netbeans.modules.web.project.ant.JspC" fork="true" failonerror="true">

<arg value="-uriroot"/>

<arg file="${basedir}/${build.web.dir}"/>

<arg value="-d"/>

<arg file="${basedir}/${build.generated.dir}/src"/>

<arg value="-die1"/>

<arg value="-schemas ${jspc.schemas}"/>

<arg value="-dtds ${jspc.dtds}"/>

<arg value="-compilerSourceVM ${javac.source}"/>

<arg value="-compilerTargetVM ${javac.target}"/>

<arg value="-javaEncoding ${source.encoding}"/>

<arg value="-sysClasspath ${libs.jsp-compilation-syscp.classpath}"/>

<classpath path="${java.home}/../lib/tools.jar:${libs.jsp-compiler.classpath}:${libs.jsp-compilation.classpath}"/>

</java>

<mkdir dir="${build.generated.dir}/classes"/>

<webproject2:javac classpath="${build.classes.dir}:${libs.jsp-compilation.classpath}:${javac.classpath}:${j2ee.platform.classpath}" srcdir="${build.generated.dir}/src" destdir="${build.generated.dir}/classes"/>

</target>


-<target name="-do-compile-single-jsp" depends="compile" if="jsp.includes">

<fail unless="javac.jsp.includes">Must select some files in the IDE or set javac.jsp.includes</fail>

<mkdir dir="${build.generated.dir}/src"/>


-<java classname="org.netbeans.modules.web.project.ant.JspCSingle" fork="true" failonerror="true">

<arg value="-uriroot"/>

<arg file="${basedir}/${build.web.dir}"/>

<arg value="-d"/>

<arg file="${basedir}/${build.generated.dir}/src"/>

<arg value="-die1"/>

<arg value="-schemas ${jspc.schemas}"/>

<arg value="-dtds ${jspc.dtds}"/>

<arg value="-sysClasspath ${libs.jsp-compilation-syscp.classpath}"/>

<arg value="-jspc.files"/>

<arg path="${jsp.includes}"/>

<arg value="-compilerSourceVM ${javac.source}"/>

<arg value="-compilerTargetVM ${javac.target}"/>

<arg value="-javaEncoding ${source.encoding}"/>

<classpath path="${java.home}/../lib/tools.jar:${libs.jsp-compiler.classpath}:${libs.jsp-compilation.classpath}"/>

</java>

<mkdir dir="${build.generated.dir}/classes"/>


-<webproject2:javac classpath="${build.classes.dir}:${libs.jsp-compilation.classpath}:${javac.classpath}:${j2ee.platform.classpath}" srcdir="${build.generated.dir}/src" destdir="${build.generated.dir}/classes">


-<customize>

<patternset includes="${javac.jsp.includes}"/>

</customize>

</webproject2:javac>

</target>


-<target name="compile-single-jsp">

<fail unless="jsp.includes">Must select a file in the IDE or set jsp.includes</fail>

<antcall target="-do-compile-single-jsp"/>

</target>

<!-- DIST BUILDING SECTION -->



-<target name="-pre-dist">

<!-- Empty placeholder for easier customization. -->


<!-- You can override this target in the ../build.xml file. -->


</target>


-<target name="-do-dist-without-manifest" depends="init,compile,compile-jsps,-pre-dist" if="do.war.package.without.custom.manifest">

<dirname file="${dist.war}" property="dist.jar.dir"/>

<mkdir dir="${dist.jar.dir}"/>


-<jar jarfile="${dist.war}" compress="${jar.compress}">

<fileset dir="${build.web.dir}" excludes="WEB-INF/classes/.netbeans_*,${dist.archive.excludes}"/>

</jar>

</target>


-<target name="-do-dist-with-manifest" depends="init,compile,compile-jsps,-pre-dist" if="do.war.package.with.custom.manifest">

<dirname file="${dist.war}" property="dist.jar.dir"/>

<mkdir dir="${dist.jar.dir}"/>


-<jar jarfile="${dist.war}" compress="${jar.compress}" manifest="${build.meta.inf.dir}/MANIFEST.MF">

<fileset dir="${build.web.dir}" excludes="WEB-INF/classes/.netbeans_*,${dist.archive.excludes}"/>

</jar>

</target>


-<target name="-do-tmp-dist-without-manifest" depends="init,compile,compile-jsps,-pre-dist" if="do.tmp.war.package.without.custom.manifest">

<dirname file="${dist.war}" property="dist.jar.dir"/>

<mkdir dir="${dist.jar.dir}"/>


-<jar jarfile="${dist.war}" compress="${jar.compress}">

<fileset dir="${build.web.dir}" excludes="WEB-INF/classes/.netbeans_*,${dist.archive.excludes}"/>

</jar>

</target>


-<target name="-do-tmp-dist-with-manifest" depends="init,compile,compile-jsps,-pre-dist" if="do.tmp.war.package.with.custom.manifest">

<dirname file="${dist.war}" property="dist.jar.dir"/>

<mkdir dir="${dist.jar.dir}"/>


-<jar jarfile="${dist.war}" compress="${jar.compress}" manifest="${build.meta.inf.dir}/MANIFEST.MF">

<fileset dir="${build.web.dir}" excludes="WEB-INF/classes/.netbeans_*,${dist.archive.excludes}"/>

</jar>

</target>

<target name="do-dist" depends="init,compile,compile-jsps,-pre-dist,-do-dist-with-manifest,-do-dist-without-manifest"/>


-<target name="library-inclusion-in-manifest" depends="init" if="dist.ear.dir">

<copyfiles files="${libs.MySQLDriver.classpath}" todir="${dist.ear.dir}/lib" iftldtodir="${build.web.dir}/WEB-INF"/>

<copyfiles files="${libs.CopyLibs.classpath}" todir="${dist.ear.dir}/lib" iftldtodir="${build.web.dir}/WEB-INF"/>

<mkdir dir="${build.web.dir}/META-INF"/>

<manifest file="${build.web.dir}/META-INF/MANIFEST.MF" mode="update"/>

</target>


-<target name="library-inclusion-in-archive" depends="init" unless="dist.ear.dir">

<copyfiles files="${libs.MySQLDriver.classpath}" todir="${build.web.dir}/WEB-INF/lib"/>

<copyfiles files="${libs.CopyLibs.classpath}" todir="${build.web.dir}/WEB-INF/lib"/>

</target>


-<target name="-clean-webinf-lib" depends="init" if="dist.ear.dir">

<delete dir="${build.web.dir}/WEB-INF/lib"/>

</target>


-<target name="do-ear-dist" depends="init,-clean-webinf-lib,compile,compile-jsps,-pre-dist,library-inclusion-in-manifest" if="do.tmp.war.package">

<dirname file="${dist.ear.war}" property="dist.jar.dir"/>

<mkdir dir="${dist.jar.dir}"/>


-<jar jarfile="${dist.ear.war}" compress="${jar.compress}" manifest="${build.web.dir}/META-INF/MANIFEST.MF">

<fileset dir="${build.web.dir}" excludes="WEB-INF/classes/.netbeans_*,${dist.archive.excludes}"/>

</jar>

</target>


-<target name="-post-dist">

<!-- Empty placeholder for easier customization. -->


<!-- You can override this target in the ../build.xml file. -->


</target>

<target name="dist" description="Build distribution (WAR)." depends="init,compile,-pre-dist,do-dist,-post-dist"/>

<target name="dist-ear" description="Build distribution (WAR) to be packaged into an EAR." depends="init,-clean-webinf-lib,-init-cos,compile,-pre-dist,do-ear-dist,-post-dist"/>

<!-- EXECUTION SECTION -->


<target name="run" description="Deploy to server and show in browser." depends="run-deploy,run-display-browser"/>


-<target name="-pre-run-deploy">

<!-- Empty placeholder for easier customization. -->


<!-- You can override this target in the ../build.xml file. -->


</target>


-<target name="-post-run-deploy">

<!-- Empty placeholder for easier customization. -->


<!-- You can override this target in the ../build.xml file. -->


</target>


-<target name="-pre-nbmodule-run-deploy">

<!-- Empty placeholder for easier customization. -->


<!-- This target can be overriden by NetBeans modules. Don't override it directly, use -pre-run-deploy task instead. -->


</target>


-<target name="-post-nbmodule-run-deploy">

<!-- Empty placeholder for easier customization. -->


<!-- This target can be overriden by NetBeans modules. Don't override it directly, use -post-run-deploy task instead. -->


</target>


-<target name="-run-deploy-am">

<!-- Task to deploy to the Access Manager runtime. -->


</target>

<target name="run-deploy" depends="init,-init-cos,compile,compile-jsps,-do-compile-single-jsp,-pre-dist,-do-tmp-dist-with-manifest,-do-tmp-dist-without-manifest,-pre-run-deploy,-pre-nbmodule-run-deploy,-run-deploy-nb,-init-deploy-ant,-deploy-ant,-run-deploy-am,-post-nbmodule-run-deploy,-post-run-deploy,-do-update-breakpoints"/>


-<target name="-run-deploy-nb" if="netbeans.home">

<nbdeploy forceRedeploy="${forceRedeploy}" debugmode="false" clientUrlPart="${client.urlPart}"/>

</target>


-<target name="-init-deploy-ant" unless="netbeans.home">

<property name="deploy.ant.archive" value="${dist.war}"/>

<property name="deploy.ant.docbase.dir" value="${web.docbase.dir}"/>

<property name="deploy.ant.resource.dir" value="${resource.dir}"/>

<property name="deploy.ant.enabled" value="true"/>

</target>

<target name="run-undeploy" depends="dist,-run-undeploy-nb,-init-deploy-ant,-undeploy-ant"/>


-<target name="-run-undeploy-nb" if="netbeans.home">

<fail message="Undeploy is not supported from within the IDE"/>

</target>


-<target name="verify" depends="init,-pre-dist,dist,-post-dist">

<nbverify file="${dist.war}"/>

</target>

<target name="run-display-browser" depends="run-deploy,-init-display-browser,-display-browser-nb-old,-display-browser-nb,-display-browser-cl"/>


-<target name="-init-display-browser" if="do.display.browser">


-<condition property="do.display.browser.nb.old">


-<and>

<isset property="netbeans.home"/>


-<not>

<isset property="browser.context"/>

</not>

</and>

</condition>


-<condition property="do.display.browser.nb">


-<and>

<isset property="netbeans.home"/>

<isset property="browser.context"/>

</and>

</condition>


-<condition property="do.display.browser.cl">

<isset property="deploy.ant.enabled"/>

</condition>

</target>


-<target name="-display-browser-nb-old" if="do.display.browser.nb.old">

<nbbrowse url="${client.url}"/>

</target>


-<target name="-display-browser-nb" if="do.display.browser.nb">

<nbbrowse url="${client.url}" urlPath="${client.urlPart}" context="${browser.context}"/>

</target>


-<target name="-get-browser" if="do.display.browser.cl" unless="browser">


-<condition value="rundll32" property="browser">

<os family="windows"/>

</condition>


-<condition value="url.dll,FileProtocolHandler" property="browser.args" else="">

<os family="windows"/>

</condition>


-<condition value="/usr/bin/open" property="browser">

<os family="mac"/>

</condition>

<property environment="env"/>


-<condition value="${env.BROWSER}" property="browser">

<isset property="env.BROWSER"/>

</condition>


-<condition value="/usr/bin/firefox" property="browser">

<available file="/usr/bin/firefox"/>

</condition>


-<condition value="/usr/local/firefox/firefox" property="browser">

<available file="/usr/local/firefox/firefox"/>

</condition>


-<condition value="/usr/bin/mozilla" property="browser">

<available file="/usr/bin/mozilla"/>

</condition>


-<condition value="/usr/local/mozilla/mozilla" property="browser">

<available file="/usr/local/mozilla/mozilla"/>

</condition>


-<condition value="/usr/sfw/lib/firefox/firefox" property="browser">

<available file="/usr/sfw/lib/firefox/firefox"/>

</condition>


-<condition value="/opt/csw/bin/firefox" property="browser">

<available file="/opt/csw/bin/firefox"/>

</condition>


-<condition value="/usr/sfw/lib/mozilla/mozilla" property="browser">

<available file="/usr/sfw/lib/mozilla/mozilla"/>

</condition>


-<condition value="/opt/csw/bin/mozilla" property="browser">

<available file="/opt/csw/bin/mozilla"/>

</condition>

</target>


-<target name="-display-browser-cl" depends="-get-browser" if="do.display.browser.cl">

<fail unless="browser"> Browser not found, cannot launch the deployed application. Try to set the BROWSER environment variable. </fail>

<property name="browse.url" value="${deploy.ant.client.url}${client.urlPart}"/>

<echo>Launching ${browse.url}</echo>


-<exec spawn="true" executable="${browser}">

<arg line="${browser.args} ${browse.url}"/>

</exec>

</target>


-<target name="run-main" depends="init,-init-cos,compile-single">

<fail unless="run.class">Must select one file in the IDE or set run.class</fail>

<webproject1:java classname="${run.class}"/>

</target>


-<target name="run-test-with-main" depends="init,compile-test-single,-pre-test-run-single">

<fail unless="run.class">Must select one file in the IDE or set run.class</fail>

<webproject1:java classpath="${run.test.classpath}" classname="${run.class}"/>

</target>


-<target name="-do-update-breakpoints" depends="init" if="netbeans.home">

<webproject1:nbjpdaappreloaded/>

</target>

<!-- DEBUGGING SECTION -->



-<target name="debug" description="Debug project in IDE." depends="init,-init-cos,compile,compile-jsps,-do-compile-single-jsp,-pre-dist,-do-tmp-dist-with-manifest,-do-tmp-dist-without-manifest" if="netbeans.home">

<nbstartserver debugmode="true"/>

<antcall target="connect-debugger"/>

<nbdeploy forceRedeploy="true" debugmode="true" clientUrlPart="${client.urlPart}"/>

<antcall target="debug-display-browser-old"/>

<antcall target="debug-display-browser"/>

<antcall target="connect-client-debugger"/>

</target>


-<target name="connect-debugger" if="do.debug.server" unless="is.debugged">


-<condition value="sourcepath" property="listeningcp">

<istrue value="${j2ee.compile.on.save}"/>

</condition>


-<nbjpdaconnect name="${name}" transport="${jpda.transport}" listeningcp="${listeningcp}" host="${jpda.host}" address="${jpda.address}">


-<classpath>

<path path="${debug.classpath}:${j2ee.platform.classpath}"/>

</classpath>


-<sourcepath>

<path path="${web.docbase.dir}"/>

</sourcepath>

</nbjpdaconnect>

</target>


-<target name="debug-display-browser-old" if="do.display.browser.debug.old">

<nbbrowse url="${client.url}"/>

</target>


-<target name="debug-display-browser" if="do.display.browser.debug">

<nbbrowse url="${client.url}" urlPath="${client.urlPart}" context="${browser.context}"/>

</target>


-<target name="connect-client-debugger" if="do.debug.client">

<webproject1:nbjsdebugstart webUrl="${client.url}"/>

</target>


-<target name="-debug-start-debuggee-main-test" depends="init,compile-test-single" if="netbeans.home">

<fail unless="debug.class">Must select one file in the IDE or set debug.class</fail>

<webproject1:debug classpath="${debug.test.classpath}" classname="${debug.class}"/>

</target>

<target name="debug-test-with-main" depends="init,compile-test-single,-debug-start-debugger-main-test,-debug-start-debuggee-main-test" if="netbeans.home"/>

<target name="debug-single" depends="init,compile,compile-jsps,-do-compile-single-jsp,debug" if="netbeans.home"/>


-<target name="-debug-start-debugger-main-test" depends="init" if="netbeans.home">

<webproject1:nbjpdastart name="${debug.class}" classpath="${debug.test.classpath}"/>

</target>


-<target name="-debug-start-debugger" depends="init" if="netbeans.home">

<webproject1:nbjpdastart name="${debug.class}"/>

</target>


-<target name="-debug-start-debuggee-single" depends="init,compile-single" if="netbeans.home">

<fail unless="debug.class">Must select one file in the IDE or set debug.class</fail>

<webproject1:debug classname="${debug.class}"/>

</target>

<target name="debug-single-main" depends="init,compile-single,-debug-start-debugger,-debug-start-debuggee-single" if="netbeans.home"/>


-<target name="-pre-debug-fix" depends="init">

<fail unless="fix.includes">Must set fix.includes</fail>

<property name="javac.includes" value="${fix.includes}.java"/>

</target>


-<target name="-do-debug-fix" depends="init,-pre-debug-fix,compile-single" if="netbeans.home">

<webproject1:nbjpdareload/>

</target>

<target name="debug-fix" depends="init,-pre-debug-fix,-do-debug-fix" if="netbeans.home"/>

<!-- ================= PROFILING SECTION ================= -->


<!-- pre NB7.2 profiling section; consider it deprecated -->



-<target name="-profile-pre72" description="Profile a J2EE project in the IDE." if="profiler.info.jvmargs.agent">


-<condition value="start-profiled-server-extraargs" property="profiler.startserver.target" else="start-profiled-server">

<isset property="profiler.info.jvmargs.extra"/>

</condition>

<antcall target="${profiler.startserver.target}"/>

<antcall target="run"/>

<antcall target="-profile-start-loadgen"/>

</target>


-<target name="start-profiled-server" if="profiler.info.jvmargs.agent">


-<nbstartprofiledserver startupTimeout="${profiler.j2ee.serverStartupTimeout}" javaPlatform="${profiler.info.javaPlatform}" forceRestart="${profiler.j2ee.serverForceRestart}">

<jvmarg value="${profiler.info.jvmargs.agent}"/>

<jvmarg value="${profiler.j2ee.agentID}"/>

</nbstartprofiledserver>

</target>


-<target name="start-profiled-server-extraargs" if="profiler.info.jvmargs.agent">


-<nbstartprofiledserver startupTimeout="${profiler.j2ee.serverStartupTimeout}" javaPlatform="${profiler.info.javaPlatform}" forceRestart="${profiler.j2ee.serverForceRestart}">

<jvmarg value="${profiler.info.jvmargs.extra}"/>

<jvmarg value="${profiler.info.jvmargs.agent}"/>

<jvmarg value="${profiler.j2ee.agentID}"/>

</nbstartprofiledserver>

</target>


-<target name="-profile-test-single-pre72" depends="profile-init,compile-test-single" if="profiler.info.jvmargs.agent">

<fail unless="netbeans.home">This target only works when run from inside the NetBeans IDE.</fail>


-<nbprofiledirect>


-<classpath>

<path path="${run.test.classpath}"/>

<path path="${j2ee.platform.classpath}"/>

</classpath>

</nbprofiledirect>


-<junit dir="${profiler.info.dir}" fork="true" showoutput="true" failureproperty="tests.failed" errorproperty="tests.failed" jvm="${profiler.info.jvm}">

<env path="${profiler.info.agentpath}:${profiler.current.path}" key="${profiler.info.pathvar}"/>

<jvmarg value="${profiler.info.jvmargs.agent}"/>

<jvmarg line="${profiler.info.jvmargs}"/>

<test name="${profile.class}"/>


-<classpath>

<path path="${run.test.classpath}"/>

<path path="${j2ee.platform.classpath}"/>

</classpath>


-<syspropertyset>

<propertyref prefix="test-sys-prop."/>

<mapper to="*" from="test-sys-prop.*" type="glob"/>

</syspropertyset>

<formatter type="brief" usefile="false"/>

<formatter type="xml"/>

</junit>

</target>


-<target name="-profile-check" if="netbeans.home">


-<condition property="profiler.configured">


-<or>

<contains string="${run.jvmargs.ide}" substring="-agentpath:" casesensitive="true"/>

<contains string="${run.jvmargs.ide}" substring="-javaagent:" casesensitive="true"/>

</or>

</condition>

</target>


-<target name="-do-profile" depends="init,-init-cos,compile,compile-jsps,-do-compile-single-jsp,-pre-dist,-do-tmp-dist-with-manifest,-do-tmp-dist-without-manifest">

<startprofiler/>

<nbstartserver profilemode="true"/>

<nbdeploy forceRedeploy="true" clientUrlPart="${client.urlPart}" profilemode="true"/>

<antcall target="debug-display-browser-old"/>

<antcall target="debug-display-browser"/>

<antcall target="-profile-start-loadgen"/>

</target>


-<target name="profile" description="Profile a J2EE project in the IDE." depends="-profile-check,-profile-pre72" if="profiler.configured" unless="profiler.info.jvmargs.agent">

<antcall target="-do-profile"/>

</target>

<target name="profile-test-single" depends="-profile-test-single-pre72"/>


-<target name="profile-test" depends="-profile-check" if="profiler.configured" unless="profiler.info.jvmargs.agent">

<startprofiler/>

<antcall target="test-single"/>

</target>


-<target name="-profile-start-loadgen" if="profiler.loadgen.path">

<loadgenstart path="${profiler.loadgen.path}"/>

</target>

<!-- JAVADOC SECTION -->



-<target name="javadoc-build" depends="init" if="have.sources">

<mkdir dir="${dist.javadoc.dir}"/>


-<javadoc source="${javac.source}" encoding="${javadoc.encoding.used}" destdir="${dist.javadoc.dir}" failonerror="true" windowtitle="${javadoc.windowtitle}" version="${javadoc.version}" useexternalfile="true" use="${javadoc.use}" splitindex="${javadoc.splitindex}" private="${javadoc.private}" notree="${javadoc.notree}" nonavbar="${javadoc.nonavbar}" noindex="${javadoc.noindex}" docencoding="UTF-8" charset="UTF-8" author="${javadoc.author}" additionalparam="${javadoc.additionalparam}">


-<classpath>

<path path="${javac.classpath}:${j2ee.platform.classpath}"/>

</classpath>


-<fileset dir="${src.dir}" includes="${includes}" excludes="${excludes}">

<filename name="**/*.java"/>

</fileset>


-<fileset dir="${build.generated.sources.dir}" erroronmissingdir="false">

<include name="**/*.java"/>

</fileset>

</javadoc>


-<copy todir="${dist.javadoc.dir}">


-<fileset dir="${src.dir}" includes="${includes}" excludes="${excludes}">

<filename name="**/doc-files/**"/>

</fileset>


-<fileset dir="${build.generated.sources.dir}" erroronmissingdir="false">

<include name="**/doc-files/**"/>

</fileset>

</copy>

</target>


-<target name="javadoc-browse" depends="init,javadoc-build" if="netbeans.home" unless="no.javadoc.preview">

<nbbrowse file="${dist.javadoc.dir}/index.html"/>

</target>

<target name="javadoc" description="Build Javadoc." depends="init,javadoc-build,javadoc-browse"/>

<!-- TEST COMPILATION SECTION -->



-<target name="-pre-pre-compile-test" depends="init,compile" if="have.tests">

<mkdir dir="${build.test.classes.dir}"/>

<property name="j2ee.platform.embeddableejb.classpath" value=""/>

</target>


-<target name="-pre-compile-test">

<!-- Empty placeholder for easier customization. -->


<!-- You can override this target in the ../build.xml file. -->


</target>


-<target name="-do-compile-test" depends="init,compile,-pre-pre-compile-test,-pre-compile-test" if="have.tests">

<webproject2:javac classpath="${javac.test.classpath}:${j2ee.platform.classpath}:${j2ee.platform.embeddableejb.classpath}" srcdir="${test.src.dir}" destdir="${build.test.classes.dir}" debug="true"/>


-<copy todir="${build.test.classes.dir}">

<fileset dir="${test.src.dir}" includes="${includes}" excludes="${build.classes.excludes},${excludes}"/>

</copy>

</target>


-<target name="-post-compile-test">

<!-- Empty placeholder for easier customization. -->


<!-- You can override this target in the ../build.xml file. -->


</target>

<target name="compile-test" depends="init,compile,-pre-pre-compile-test,-pre-compile-test,-do-compile-test,-post-compile-test"/>


-<target name="-pre-compile-test-single">

<!-- Empty placeholder for easier customization. -->


<!-- You can override this target in the ../build.xml file. -->


</target>


-<target name="-do-compile-test-single" depends="init,compile,-pre-pre-compile-test,-pre-compile-test-single" if="have.tests">

<fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>

<webproject2:javac classpath="${javac.test.classpath}:${j2ee.platform.classpath}:${j2ee.platform.embeddableejb.classpath}" srcdir="${test.src.dir}" includes="${javac.includes}" excludes="" destdir="${build.test.classes.dir}" debug="true"/>


-<copy todir="${build.test.classes.dir}">

<fileset dir="${test.src.dir}" includes="${includes}" excludes="${build.classes.excludes},${excludes}"/>

</copy>

</target>


-<target name="-post-compile-test-single">

<!-- Empty placeholder for easier customization. -->


<!-- You can override this target in the ../build.xml file. -->


</target>

<target name="compile-test-single" depends="init,compile,-pre-pre-compile-test,-pre-compile-test-single,-do-compile-test-single,-post-compile-test-single"/>

<!-- TEST EXECUTION SECTION -->



-<target name="-pre-test-run" depends="init" if="have.tests">

<mkdir dir="${build.test.results.dir}"/>

</target>


-<target name="-do-test-run" depends="init,compile-test,-pre-test-run" if="have.tests">

<webproject2:test includes="${includes}" testincludes="**/*Test.java"/>

</target>


-<target name="-post-test-run" depends="init,compile-test,-pre-test-run,-do-test-run" if="have.tests">

<fail if="tests.failed" unless="ignore.failing.tests">Some tests failed; see details above.</fail>

</target>

<target name="test-report" depends="init" if="have.tests"/>

<target name="-test-browse" depends="init" if="netbeans.home+have.tests"/>

<target name="test" description="Run unit tests." depends="init,compile-test,-pre-test-run,-do-test-run,test-report,-post-test-run,-test-browse"/>


-<target name="-pre-test-run-single" depends="init" if="have.tests">

<mkdir dir="${build.test.results.dir}"/>

</target>


-<target name="-do-test-run-single" depends="init,compile-test-single,-pre-test-run-single" if="have.tests">

<fail unless="test.includes">Must select some files in the IDE or set test.includes</fail>

<webproject2:test includes="${test.includes}" excludes="" testincludes="${test.includes}"/>

</target>


-<target name="-post-test-run-single" depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single" if="have.tests">

<fail if="tests.failed" unless="ignore.failing.tests">Some tests failed; see details above.</fail>

</target>

<target name="test-single" description="Run single unit test." depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single,-post-test-run-single"/>


-<target name="-do-test-run-single-method" depends="init,compile-test-single,-pre-test-run-single" if="have.tests">

<fail unless="test.class">Must select some files in the IDE or set test.class</fail>

<fail unless="test.method">Must select some method in the IDE or set test.method</fail>

<webproject2:test includes="${javac.includes}" excludes="" testmethods="${test.method}" testincludes="${test.class}"/>

</target>


-<target name="-post-test-run-single-method" depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single-method" if="have.tests">

<fail if="tests.failed" unless="ignore.failing.tests">Some tests failed; see details above.</fail>

</target>

<target name="test-single-method" description="Run single unit test." depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single-method,-post-test-run-single-method"/>

<!-- TEST DEBUGGING SECTION -->



-<target name="-debug-start-debuggee-test" depends="init,compile-test-single,-pre-test-run-single" if="have.tests">

<fail unless="test.class">Must select one file in the IDE or set test.class</fail>

<webproject2:test-debug includes="${javac.includes}" excludes="" testincludes="${javac.includes}" testClass="${test.class}"/>

</target>


-<target name="-debug-start-debuggee-test-method" depends="init,compile-test-single,-pre-test-run-single" if="have.tests">

<fail unless="test.class">Must select one file in the IDE or set test.class</fail>

<fail unless="test.method">Must select some method in the IDE or set test.method</fail>

<webproject2:test-debug includes="${javac.includes}" excludes="" testmethods="${test.method}" testincludes="${test.class}" testMethod="${test.method}" testClass="${test.class}"/>

</target>


-<target name="-debug-start-debugger-test" depends="init,compile-test" if="netbeans.home+have.tests">

<webproject1:nbjpdastart name="${test.class}" classpath="${debug.test.classpath}"/>

</target>

<target name="debug-test" depends="init,compile-test,-debug-start-debugger-test,-debug-start-debuggee-test"/>

<target name="debug-test-method" depends="init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test-method"/>


-<target name="-do-debug-fix-test" depends="init,-pre-debug-fix,compile-test-single" if="netbeans.home">

<webproject1:nbjpdareload dir="${build.test.classes.dir}"/>

</target>

<target name="debug-fix-test" depends="init,-pre-debug-fix,-do-debug-fix-test" if="netbeans.home"/>

<!-- CLEANUP SECTION -->


<target name="deps-clean" depends="init" unless="no.deps"/>


-<target name="do-clean" depends="init">


-<condition value="${build.web.dir}" property="build.dir.to.clean">

<isset property="dist.ear.dir"/>

</condition>

<property name="build.dir.to.clean" value="${build.web.dir}"/>


-<delete quiet="true" includeEmptyDirs="true">

<fileset dir="${build.dir.to.clean}/WEB-INF/lib"/>

</delete>

<delete dir="${build.dir}"/>

<available file="${build.dir.to.clean}/WEB-INF/lib" property="status.clean-failed" type="dir"/>

<delete dir="${dist.dir}"/>

</target>


-<target name="check-clean" depends="do-clean" if="status.clean-failed">

<echo message="Warning: unable to delete some files in ${build.web.dir}/WEB-INF/lib - they are probably locked by the J2EE server. "/>

<echo message="To delete all files undeploy the module from Server Registry in Runtime tab and then use Clean again." level="info"/>

</target>


-<target name="undeploy-clean" depends="init" if="netbeans.home">

<nbundeploy startServer="false" failOnError="false"/>

</target>


-<target name="-post-clean">

<!-- Empty placeholder for easier customization. -->


<!-- You can override this target in the ../build.xml file. -->


</target>

<target name="clean" description="Clean build products." depends="init,undeploy-clean,deps-clean,do-clean,check-clean,-post-clean"/>

<target name="clean-ear" description="Clean build products." depends="clean"/>

</project>
